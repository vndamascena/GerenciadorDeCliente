@model GerenciadorDeClientes.Presentation.Models.DashboardViewModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h5 class="text-white">Seja bem vindo ao sistema!</h5>
<p class="text-white"></p>
<hr class="text-white" />


<div class="row mb-5 mt-3">
    <div class="col">
        <div id="graficoTipos"></div>
    </div>
    <div class="col">
        <div id="graficoCategorias"></div>
    </div>
</div>


@section scripts {
   <script>
        // Dados para o gráfico de pizza (parâmetros)
        const dadosPizza = [];
        @foreach (var item in ViewBag.Parametros)
        {
            <text>
                dadosPizza.push(["@item.Nome", @item.Qtd]);
            </text>
        }
        
        // Dados para o gráfico de barras (totalCategoria)
        const dadosBarras = [
            @foreach (var item in ViewBag.TotalCategoria)
            {
                <text>
                {
                    categoria: "@Html.Raw(item.Categoria)", // Usa Html.Raw para evitar escaping de caracteres
                    valor: @item.TotalClientes
                },
                </text>
            }
        ];

   </script>

    <script>

       
        
        
        
        // Configurações do gráfico de pizza
        const opcoesPizza = {
            chart: {
                type: 'pie'
            },
            title: {
                text: 'Clientes por categoria'
            },
            tooltip: {
                pointFormat: '<b>{point.name}</b>: {point.y} clientes'
            },
            series: [{
                name: 'Clientes',
                data: dadosPizza
            }],
            plotOptions: {
                pie: {
                    
                    dataLabels: {
                        enabled: true,
                        format: '<b>{point.name}</b>: {point.y}'
                    }
                }
            }
        };

        // Configurações do gráfico de barras
        const opcoesBarras = {
            chart: {
                type: 'column'
            },
            title: {
                text: 'Quantidade de clientes'
            },
            xAxis: {
                categories: dadosBarras.map(item => item.categoria)
            },
            yAxis: {
                title: {
                    text: 'Quantidade'
                }
            },

          
            series: [{
                name: 'Quantidade',
                data: dadosBarras.map(item => item.valor)
            }],
           
        };
        // Renderizar os gráficos
        Highcharts.chart('graficoTipos', opcoesPizza);
        Highcharts.chart('graficoCategorias', opcoesBarras);
    </script>
}
