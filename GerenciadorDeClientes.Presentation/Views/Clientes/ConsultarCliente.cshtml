@model GerenciadorDeClientes.Presentation.Models.ConsultarClienteViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2 class="text-white">Dados do cliente:</h2>

<hr class="text-white" />



@using (Html.BeginForm(FormMethod.Post, new { @class = "text-white" }))
{
    <div class=" row mb-2">
        <div class="col">
            <label>Nome:</label>
            @Html.TextBoxFor(model => model.Nome, new {@class = "form-control", @readonly = "readonly"})
            <span>@Html.ValidationMessageFor(model => model.Nome)</span>

        </div>

        <div class="col">
            <label>CPF:</label>
            @Html.TextBoxFor(model => model.Cpf, new {@class = "form-control", @readonly = "readonly"})
            <span>@Html.ValidationMessageFor(model => model.Cpf)</span>
        </div>

        <div class="col">
            <label>Matrícula:</label>
            @Html.TextBoxFor(model => model.Matricula, new {@class = "form-control", @readonly = "readonly"})
            <span>@Html.ValidationMessageFor(model => model.Matricula)</span>
        </div>

    </div>
    <div class=" row mb-2">

        <div class="col-auto">
            <label>Data de Nascimento:</label>
            @Html.TextBoxFor(model => model.DataN, "{0:yyyy-MM-dd}", new {@type = "date",@id="dataNascimento", @class = "form-control", @readonly = "readonly"})
            <span>@Html.ValidationMessageFor(model => model.DataN)</span>


        </div>

        <div class="col-auto">
            <label>Idade:</label>
            <div id="idade"></div>
        </div>



    </div>

    <div class="col-8">
        <label>Observações:</label>
        @Html.TextAreaFor(model => model.Observacao, new {@class = "form-control", @readonly = "readonly"})
    </div>
    <br />




    <div class="row mb-2">

        <div class="col col-2">
            <label>Telefone:</label>
            @Html.TextBoxFor(model => model.Telefone, new {@class = "form-control",@readonly = "readonly"})
            <span>@Html.ValidationMessageFor(model => model.Telefone)</span>

        </div>



    </div>

    <div class="row mb-2">

        <div class="col-2">
            <label>Categoria:</label>
            @Html.TextBoxFor(model => model.Categoria, new { @class = "form-control", @readonly = "readonly"})

            <span>@Html.ValidationMessageFor(model => model.Categoria)</span>
        </div>

        <div class="col-2">
            <label>Salário:</label>
            @Html.TextBoxFor(model => model.Salario, new { @class = "form-control", @readonly = "readonly", @id = "salario" })
            <span>@Html.ValidationMessageFor(model => model.Salario)</span>
        </div>

        <div class="col-2">
            <label>Parcela:</label>
            <input type="text" class="form-control" id="parcela" readonly />
        </div>

        <div class="col-2">
            <label>Fator:</label>
            @Html.TextBoxFor(model => model.Fator, new { @class = "form-control",  @id = "fatorInput" })
            <span>@Html.ValidationMessageFor(model => model.Fator)</span>
        </div>

        <div class="col-2">
            <label>Valor Liberado:</label>
            @Html.TextBoxFor(model => model.ValorLiberado, new { @class = "form-control", @readonly = "readonly", @id = "valorLiberado" })
        </div>

        <hr class="text-white" />

    </div>

    <div class="row mb-2">
        <div class="col">
            <a href="/Clientes/Consultar" class="btn btn-light">Voltar</a>
        </div>
    </div>



    <script>
        // Função para calcular a idade com base na data de nascimento
        function calcularIdade() {
            const dataNascimento = new Date(document.getElementById("dataNascimento").value);
            const hoje = new Date();
            const diff = hoje - dataNascimento;
            const idade = Math.floor(diff / (1000 * 60 * 60 * 24 * 365.25));
            document.getElementById("idade").innerText = idade + " anos";
        }
        // Adicionar um ouvinte de evento para calcular a idade sempre que a data de nascimento for alterada
        document.getElementById("dataNascimento").addEventListener("change", calcularIdade);

        // Calcular a idade quando a página for carregada
        calcularIdade();

        // Função para calcular a parcela, fator e valor liberado
        function calcularParcelaFatorValorLiberado() {
            const salario = parseFloat(document.getElementById("salario").value);
            const parcela = salario * 0.3;
            const fator = parseFloat(document.getElementById("fatorInput").value || "0.02589");

            if (fator > 0.0) {
                valorLiberado = parcela / fator;
            } else {
                valorLiberado = 0;
            }

            // Atualizar os campos correspondentes com os valores calculados
            document.getElementById("parcela").value = parcela.toFixed(2);
            document.getElementById("valorLiberado").value = valorLiberado.toFixed(2);
        }

        // Adicionar um ouvinte de evento para calcular sempre que o salário ou o fator forem alterados
        document.getElementById("salario").addEventListener("keyup", calcularParcelaFatorValorLiberado);
        document.getElementById("fatorInput").addEventListener("keyup", calcularParcelaFatorValorLiberado);

        // Calcular quando a página for carregada
        calcularParcelaFatorValorLiberado();

        

        
    </script>




}

